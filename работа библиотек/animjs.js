/*
  animejs уже на фоне имеет анимацию торможение со стабилизацией. Чем больше нужно пройти пути
  от А до Б тем сильней блок шатает. Всё как в физике сила инерции работает. Что за формула, хз.
*/  
/*
//обращение по пути не будет выдавать подсказки и да, хоть min файл не показывает, но оказывается подключение работает
*/
import anime from 'animejs/lib/anime.min.js';
option
{
  target: elAll || 'div' || '.boxAnim' /*не обязательно вызывать document.querySelectorAll.
                                         можно указывать даже объект данных с произвольными 
                                         key: value(должно быть изменяемым числом)*/
                                         
  target:  ['.item', el.getElementById('#thing'), '.myBox p']//перечислять элементы или обращаться через конкретный элемент '.myBox p'
   /* все перечисленные ниже свойства будут влиять на все элементы в target. Иногда такой подход не очень если у одного надо менять свойство у другова нет,
      но если можно применять если у одного есть такие свойства, а у другова нет. блок и svg или svg фигура и доп элементы типа filter */
  
  //*вариант от его местоположения ДО значения.
  translateX: ''//некоторые свойства css transform transition сокращены до их значения
  rotate: '1turn'//1turn единица в animejs, заменяет 360deg
  //*варианты ОТ и ДО значения
  opacity: [.5, 1]//вместо текущего в css и opacity: 1
  /* ... любые css свойства в camelCase или в 'font-size'*/
  
/*----<{ Любые свои свойства имеющие число и переданные в target }>----- */
  target: {myProp: 0}
  myProp: 300// счётчик до 300. скорость определяется анимацией.
/*-------------------------------------------------------------------------*/

  
  duration: 10000//время анимации
  delay: 5000//время задержки
  easing: 'linear'// выбор анимации
  loop: true// циклично повторять. тот же	animation-iteration-count: infinity или число
  direction: 'alternate'//тот же animation-direction (направление) normal, reverse, alternate-от начала к концу, alternate-reverse с конца в начало 
  round: 1//1-целые. округлить число. 2- десятичные 3 ... В НАШИХ ДАННЫХ ПЕРЕДАННЫХ В target 

  //методы
  update: (e)=>{//обновляет данные в DOM на протяжении анимации
    //содержит свой объект Event анимации 
  }
}



//Пример 1
//Произвольные key: value ОТ:
let battery = {
  charged: '0%',
  cycles: 120,
}
//
anime({
  targets: battery,
//ДО. указываем их же
  charged: '100%',
  cycles: 330,

  round: 1,
  duration: 10000,
  delay: 5000,
  easing: 'linear',
  
  update: function(e) {
    //куда-нибудь пихаем данные
    el.innerHTML = JSON.stringify(battery);
  }
});