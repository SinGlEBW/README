$(document).ready(function(){})//старый подход при загрузке страницы
$(function(){})//сокращённый вариант верхней записи

/*######------<{ селекторы обращения }>---------#######*/
$('#id')//обращение как в querySelector
$('*')//все элементы DOM
$('div.menu')//все div с классом menu
$('p, h1')//все <p> и <h1>
$('.menu p')//все <p> потомки класса .menu. есть так же .menu > p.
$('p:first')//первый элемент <p>
$('ul li:eq(2)')//третий элемент в списке li. eq(index)/ над проверить ищет в li или это 3й li
$(':constant("solo")')//ищет все элементы которые содержат текст solo
//есть ещё, но кажется это избыток


$('<p></p>')//создание элемента

/*######------<{ html методы }>---------#######*/
.html()//тот же innerHtml или insertAdjacentHTML, get или set html 
.text()//тот же innerText или insertAdjacentText, get или set текста элемента: $('<p></p>').text('Hi'). Создание и добавление текста
.attr('type','')//получение значения атрибута у элемента. Если 2 параметра, то предать атрибуту значение 
.removeAttr('type')//удаление атрибута из html 
.append()//добавить контент в конец выбранных элементов <p>Hi</p> p.append(' David') = <p>Hi David</p>. можно передавать и теги
.prepend()//добавить контент в начало выбранных элементов
.before()//добавить контент до выбранных элементов
.after()//добавить контент после выбранных элементов

.remove()//удалить элемент от которого обращаемся
.empty()//удаляет дочерние элементы
/*--------------------------------------------*/
/*######------<{ движение по DOM }>---------#######*/
.parent()//обращение к родителю. что бы получить всех предков parents()
.siblings()//относительно элемента братья
.next()//следующий элемент брат .nextAll() все следующие элементы
.prev()//предыдущий элемент брат .prevAll() все предыдущие элементы
.children()//относительно родителя дети
.eq()//элемент с определённым индексом

/*--------------------------------------------*/
/*######------<{ css методы }>---------#######*/
//классов можно передавать больше одного 'one two three' и т.д
.addClass('active')//добавить класс
.removeClass('active')//удалить класс
.toggleClass('active')//если есть удалит если нет добавит класс
.css('background-color', 'red')/*получить или передать css свойство. можно camelCase 
                                 передать много свойств использовать JSON объект*/
.width().hight()//ширина высота без padding
.innerWidth().innerHight()//ширина высота c padding до border
.outerWidth().outerHight()//ширина высота c padding и border до margin



/*--------------------------------------------*/
/*######------<{ методы form }>---------#######*/
val()//получить данные input, или передать если указать параметр


/*--------------------------------------------*/
/*######------<{ события }>---------#######*/
.click(cb)//событие клика
.dblclick(cb)//событие двойного клика
.mouseenter(cb)//срабатывает 1 раз как только мышь появляется над элементом 
.mouseleave(cb)//срабатывает 1 раз как только мышь уходит с элемента
.mouseover(cb)//срабатывает постоянно пока мышь находиться на элементе
/*......... */
.on()//тот же addEventListener


$(this)//часто при циклах так обращаются к контексту

event.

slideToggle(300);// переключение +- 300px. Например движение блока спойлера
slideUp(300);//300px сверху
not($(this)).removeClass('active')//кроме this удалить везде (в массиве элементов) класс  

