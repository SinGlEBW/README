/*
  Что бы на linux работал ssh должны установлены пакеты под root пользователем:

    apt-get install curl mc net-tools htop openssh-server iputils-ping -y

  ---------------------------------------------------------------------------------------------------------
  ########-------<{ подключение через ssh к Ubuntu через PuTTy }>-------#########
  Если подключение через PuTTy по ssh не выходит и показывает ошибку, скорей всего на Ubuntu не включен ssh хоть и стоят какие-то пакеты.
  Нужно проверить статус:
      systemctl ssh status   если not found то переустановить пакет
    sudo apt-get purge openssh-server
    sudo apt-get install openssh-server и проверить снова статус
  
  Что бы можно было заходить на root пользователя нужно внести изменения в файле sshd_config
  предварительно выбрав root, например введя sudo su перед поиском файла.
  /etc/ssh/sshd_config
  Найти строчку PermitRootLogin раскомментировать указав аргумент yes, после сохранить и перезагрузить 
  процесс systemctl restart ssh.service  или service ssh restart


  Подключение через ssh ipv6 или ipv4:
    ssh -6 сюда ipv6      ipv6 можно получить на хостинге

    ssh root@ipv4         ipv4 так же от хоста

аутентификация по ключу SSH более надежна. 
  Как это работает:

  Требуется пара ключей: открытый (name.pub) и закрытый ключ. Открытый ключ шифрует сообщения, закрытый ключ расшифровывает их. 

  Закрытый ключ оставляем у себя, а открытый ключ загружается на удаленный сервер, к которому необходимо получить доступ. 
  Его нужно добавить в специальный файл ~/.ssh/authorized_keys.

  При подключении к серверу через этот ключ выполняется проверка подлинности, сервер отправляет сообщение,
  зашифрованное с помощью открытого ключа, если клиент сможет его расшифровать и вернуть правильный ответ - аутентификация пройдена.

  Создание ключа:
    Что бы использовать подключение с помощью ssh нужно у себя сгенерировать ключи:
    ssh-keygen    По ум. предлагает расположение и название ключа. располагаются в папке ~/.ssh/id_rsa. 
                  Путь лучше не менять, а название можно. Пример: путь/my_key
        Далее утилита предложит ввести пароль для дополнительного шифрования ключа на диске. Его можно не указывать. 
        Доп.шифрование имеет только один минус - необходимость вводить пароль, но преимущества:
          - Пароль не попадет в сеть, только на лок. машине для расшифровки ключа. 
          - Секретный ключ теперь в закрытом каталоге и у клиента ssh нет к нему доступа пока не введен пароль;
          - Если злоумышленник хочет взломать аутентификацию по ключу SSH, ему понадобится доступ к вашей системе. 
            И даже тогда ключевая фраза может стать серьезной помехой на его пути.

        Создаётся пара:
           my_key - имя секретного ключа, публичный my_key.pub. 

    Т.к. открытый ключ нужно отправить на сервер, в некоторых панелях управления сервером, например, сPanel или любой другой
    есть такая возможность.Но есть и другой способ: ssh-copy-id входит в пакет программ OpenSSH

      ssh-copy-id username@remote_host



    Если приходиться по 100 раз вводить кучу команд для подключения по ssh можно воспользоваться ssh config
    Оптимальный вариант — создать файл конфигурации для каждого пользователя, в котором будут храниться различные параметры 
    SSH для каждого удаленного хоста, к которому вы будете подключаться.
    
    В bash прописать:
    touch ~/.ssh/config или vi ~/.ssh/config или nano ~/.ssh/config 

    таким образом:
    Host имя
        HostName 178.20.153.253
        Port 22
        User root


   


*/