
/*
  При разработке компонентов создают в каждой папке файл index.js
  делают такой манёвр
  export { default as Component } from 'местоположение компонента'.
  это называется Реэкспорт - подключение и сразу эе экспорт
  Нужно для того что бы при обращении в дальнейшем к этому index
  файлу можно было доставать компоненты из одного подключения

  import { Component1, Component2, Component3 } from '../index.js'

  иначе придётся лазить за каждым компонентом. Так же плюсы при перемещении
  компонента, путь придётся настроить в одном месте, а не везде. 
*/
"Виды атак: "
let attack = {
  CSRF: '',
  XSS: 'Вроде как хранение в cookie не защищает от данной атаки'
}


/* Стоит ли получать массив объектов ошибок, если нужен объект для удобной деструктуризации,
   что бы потом заморачиваться и делать так */
let err = [{field: 'login', msg: 'ошибка логина'}, {field: 'pass', msg: 'ошибка пароля'}]
submitErrors: err.reduce((prevVal, i)=>({...prevVal, [i.field]: i.msg}), {})
//или просто заполнять объект с ошибками на сервере. Мне кажется удобней набор ошибок для ключей содержать так
let err2 = {login: 'ошибка логина', pass: ['ошибка пароля 1', 'ошибка пароля 2'] };



/*
  Не знаю в чём соль, но видел как некоторые оборачивают на лево и на право даже маленькие 
  куски кода. 
  Вот на кой хер делать так: 

    let _setUpListeners = function () {
      _sliderControls.forEach(function (item) {
        item.addEventListener('click', _controlClick);
      });
    }
    // инициализация
    _setUpListeners();

  Если можно так:
     _sliderControls.forEach((item) => item.addEventListener('click', _controlClick));

Очевидные вещи, но не всегда приходят на ум.
  При построении условий не забывать о диапазонах. Число может быть как больше, так и меньше относительно
  тех значений которые мы не рассматриваем изначально.
  
  
*/